<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>주식 정보</title>
</head>
<body>
    <h1>주식 정보</h1>

    <p>
        <span>종목명 검색: </span>
        <input type="text" id="stockSearch" placeholder="종목명 입력">
        <button onclick="searchStocks()">조회</button>
    </p>

    <h2>종목 목록</h2>
    <table border="1">
        <thead>
            <tr>
                <th>종목코드</th>
                <th>종목명</th>
                <th>정보</th>
            </tr>
        </thead>
        <tbody id="stockList">
            <!-- 종목 목록 이곳에 표시 -->
        </tbody>
    </table>

    <h2>거래량 순위</h2>
    <p>
        <span>기간 검색: </span>
        <input type="date" id="startDate">
        <span>~</span>
        <input type="date" id="endDate">
        <button onclick="showTransactionRanking()">기간 조회</button>
        <button onclick="showTransactionRanking('today')">오늘의 거래량 순위</button>
    </p>

    <table border="1" id="rankingTable">
        <thead>
            <tr>
                <th>순위</th>
                <th>종목코드</th>
                <th>종목명</th>
                <th>거래량</th>
            </tr>
        </thead>
        <tbody id="rankingTableBody">
            <!-- 거래량 순위 데이터 이곳에 표시 -->
        </tbody>
    </table>


    <script>
        const clientName = "<%= clientName %>";
        const account_id = "<%= account_id %>";

        // 주식 목록 조회 및 검색 기능
        function searchStocks() {
            const stockName = document.getElementById('stockSearch').value;

            // 주식 검색 요청 (부분 검색)
            const url = stockName
                ? `/stock/search?stockName=${stockName}`
                : `/stock/search`;

            fetch(url)
                .then(response => response.json())
                .then(data => displayStocks(data));
        }

        // 주식 목록 테이블에 데이터 표시
        function displayStocks(stocks) {
            const stockList = document.getElementById('stockList');
            stockList.innerHTML = ''; // 기존 내용 지우기

            stocks.forEach(stock => {
                stockList.innerHTML += `
                    <tr>
                        <td>${stock.stock_id}</td>
                        <td>${stock.name}</td>
                        <td>
                            <button onclick="viewStockDetails('${stock.stock_id}')">보기</button>
                        </td>
                    </tr>
                `;
            });
        }

        // 종목 세부 정보 페이지로 이동
        function viewStockDetails(stockID) {
            window.location.href = `/stock/details?stock_id=${stockID}&clientName=${clientName}&account_id=${account_id}`;
        }

        // 거래량 순위 조회
        async function showTransactionRanking(period = 'custom') {
            let startDate, endDate;

            if (period === 'today') {
                const today = new Date().toISOString().split("T")[0];
                startDate = today;
                endDate = today;
            } else {
                startDate = document.getElementById('startDate').value;
                endDate = document.getElementById('endDate').value;
            }

            const response = await fetch(`/stock/transaction-ranking?startDate=${startDate}&endDate=${endDate}`);
            const data = await response.json();

            const rankingTableBody = document.getElementById('rankingTableBody');
            rankingTableBody.innerHTML = ''; // 기존 결과 지우기

            data.forEach((stock, index) => {
                rankingTableBody.innerHTML += `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${stock.stock_id}</td>
                        <td>${stock.name}</td>
                        <td>${stock.total_volume}</td>
                    </tr>
                `;
            });
        }

        // 페이지 로드 시 전체 주식 목록 표시
        document.addEventListener("DOMContentLoaded", searchStocks);
    </script>
</body>
</html>